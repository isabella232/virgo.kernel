project(':kernel:org.eclipse.virgo.kernel.agent.dm') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile group: "org.springframework", name: "org.springframework.core", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.context", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.beans", version: springframeworkVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.core", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.extender", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.osgi')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
	}
}

project(':kernel:org.eclipse.virgo.kernel.artifact') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.common')
		compile project(':util:org.eclipse.virgo.util.io')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')
		compile project(':util:org.eclipse.virgo.util.parser.manifest')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':repository:org.eclipse.virgo.repository')
	}
}

project(':kernel:org.eclipse.virgo.kernel.deployer') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':medic:org.eclipse.virgo.medic.test')
		testCompile project(':test:org.eclipse.virgo.test.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"

		compile group: "org.springframework", name: "org.springframework.beans", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.context", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.core", version: springframeworkVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.core", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"

		compile project(':kernel:org.eclipse.virgo.kernel.artifact')
		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
		compile project(':kernel:org.eclipse.virgo.kernel.services')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':nano:org.eclipse.virgo.nano.deployer.api')
		compile project(':nano:org.eclipse.virgo.nano.deployer.hot')
		compile project(':repository:org.eclipse.virgo.repository')
		compile project(':util:org.eclipse.virgo.util.common')
		compile project(':util:org.eclipse.virgo.util.io')
		compile project(':util:org.eclipse.virgo.util.jmx')
		compile project(':util:org.eclipse.virgo.util.math')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')

		if (System.properties['weaving.enabled'] == 'true') {
			aspectpath project(':medic:org.eclipse.virgo.medic')
			aspectpath project(':nano:org.eclipse.virgo.nano.core')
			aspectpath project(':util:org.eclipse.virgo.util.jmx')
		}
	}
}

project(':kernel:org.eclipse.virgo.kernel.deployer.dm') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':medic:org.eclipse.virgo.medic.test')
		testCompile project(':test:org.eclipse.virgo.test.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"

		compile group: "org.springframework", name: "org.springframework.beans", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.context", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.core", version: springframeworkVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.core", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"

		compile project(':kernel:org.eclipse.virgo.kernel.agent.dm')
		compile project(':kernel:org.eclipse.virgo.kernel.deployer')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')

		if (System.properties['weaving.enabled'] == 'true') {
			aspectpath project(':medic:org.eclipse.virgo.medic')
		}
	}
}

project(':kernel:org.eclipse.virgo.kernel.dmfragment') {
	dependencies {
		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"

		compile group: "org.springframework", name: "org.springframework.beans", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.context", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.context.support", version: springframeworkVersion, configuration: "compile", ext: "jar"
		compile group: "org.springframework", name: "org.springframework.core", version: springframeworkVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.core", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.extender", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.blueprint.io", version: geminiBlueprintVersion, configuration: "compile", ext: "jar"

		compile project(':kernel:org.eclipse.virgo.kernel.agent.dm')
		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
		compile project(':kernel:org.eclipse.virgo.kernel.deployer')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')

		if (System.properties['weaving.enabled'] == 'true') {
			aspectpath project(':medic:org.eclipse.virgo.medic')
		}
	}
}

project(':kernel:org.eclipse.virgo.kernel.model') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')
		testCompile project(':kernel:org.eclipse.virgo.kernel.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
		compile project(':kernel:org.eclipse.virgo.kernel.deployer')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':nano:org.eclipse.virgo.nano.deployer.api')
		compile project(':util:org.eclipse.virgo.util.jmx')

		aspectpath project(':nano:org.eclipse.virgo.nano.core')

		if (System.properties['weaving.enabled'] == 'true') {
			aspectpath project(':medic:org.eclipse.virgo.medic')
			aspectpath project(':util:org.eclipse.virgo.util.jmx')
		}
	}
}

project(':kernel:org.eclipse.virgo.kernel.osgi') {
	dependencies {
		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.osgi.manifest')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':kernel:org.eclipse.virgo.kernel.artifact')

		aspectpath project(':nano:org.eclipse.virgo.nano.core')
	}
}

project(':kernel:org.eclipse.virgo.kernel.equinox.extensions') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
	}
}

project(':kernel:org.eclipse.virgo.kernel.stubs') {
	dependencies {
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.common')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':nano:org.eclipse.virgo.nano.deployer.api')
		compile project(':kernel:org.eclipse.virgo.kernel.artifact')
		compile project(':kernel:org.eclipse.virgo.kernel.deployer')
		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
	}
}

project(':kernel:org.eclipse.virgo.kernel.services') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')
		testCompile project(':medic:org.eclipse.virgo.medic.test')

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"

		compile group: "org.springframework", name: "org.springframework.beans", version: springframeworkVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.math')
		compile project(':util:org.eclipse.virgo.util.io')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':repository:org.eclipse.virgo.repository')
		compile project(':kernel:org.eclipse.virgo.kernel.artifact')
	}

	task createBundle(type:Zip,dependsOn:jar){
		String jarFileName
		jar.outputs.files.each {
			from it.getPath()
			println it.getPath()
			jarFileName = it.getPath()
		}
		doLast() {
			println "Content of jar file ${jarFileName}:"
			java.util.zip.ZipFile file = new java.util.zip.ZipFile(jarFileName)
			file.entries().each { entry ->
			println "${entry.getName()}"
			}
		}
	}
}

project(':kernel:org.eclipse.virgo.kernel.userregion') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')
		testCompile project(':medic:org.eclipse.virgo.medic.test')

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.common')
		compile project(':util:org.eclipse.virgo.util.math')
		compile project(':util:org.eclipse.virgo.util.io')
		compile project(':util:org.eclipse.virgo.util.osgi')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')
		compile project(':util:org.eclipse.virgo.util.parser.manifest')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':nano:org.eclipse.virgo.nano.deployer.api')
		compile project(':repository:org.eclipse.virgo.repository')
		compile project(':kernel:org.eclipse.virgo.kernel.artifact')
		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
		compile project(':kernel:org.eclipse.virgo.kernel.deployer')
		compile project(':kernel:org.eclipse.virgo.kernel.services')
		compile project(':kernel:org.eclipse.virgo.kernel.equinox.extensions')
	}
}

project(':kernel:org.eclipse.virgo.kernel.userregionfactory') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile project(':util:org.eclipse.virgo.util.parser.launcher')
		compile project(':util:org.eclipse.virgo.util.osgi')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')
		compile project(':util:org.eclipse.virgo.util.parser.manifest')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.core')
		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
	}
}

project(':kernel:org.eclipse.virgo.shell.command') {
	dependencies {
		testCompile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.nop", version: slf4jNopVersion, configuration: "compile", ext: "jar"
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile project(':test:org.eclipse.virgo.test.stubs')

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.apache.felix.gogo.runtime", version: gogoRuntimeVersion, configuration: "compile", ext: "jar"

		compile group: "org.springframework", name: "org.springframework.core", version: springframeworkVersion, configuration: "compile", ext: "jar"

		compile project(':kernel:org.eclipse.virgo.kernel.deployer')
		compile project(':kernel:org.eclipse.virgo.kernel.model')
		compile project(':kernel:org.eclipse.virgo.kernel.osgi')
		compile project(':medic:org.eclipse.virgo.medic')
		compile project(':nano:org.eclipse.virgo.nano.deployer.api')
		compile project(':repository:org.eclipse.virgo.repository')
		compile project(':util:org.eclipse.virgo.util.common')
		compile project(':util:org.eclipse.virgo.util.io')
		compile project(':util:org.eclipse.virgo.util.osgi')
		compile project(':util:org.eclipse.virgo.util.osgi.manifest')

		if (System.properties['weaving.enabled'] == 'true') {
			aspectpath project(':medic:org.eclipse.virgo.medic')
		}
	}
}

project(':kernel:org.eclipse.virgo.management.fragment') {
	dependencies {
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.equinox.region", version: equinoxRegionVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.management", version: geminiManagementVersion, configuration: "compile", ext: 'jar'
	}
}

project(':kernel:org.eclipse.virgo.management.console') {
	dependencies {
		testCompile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.nop", version: slf4jNopVersion, configuration: "compile", ext: "jar"
		testCompile group: 'org.easymock', name: 'easymock', version: easymockVersion
		testCompile group: "org.springframework", name: "org.springframework.core", version: springframeworkVersion, configuration: "compile", ext: "jar"
		testCompile group: "org.springframework", name: "org.springframework.test", version: springframeworkVersion, configuration: "compile", ext: "jar"
		testCompile group: "org.eclipse.virgo.mirrored", name: "org.mozilla.javascript", version: mozillaJavascriptVersion, configuration: "compile", ext: "jar"
		testCompile group: "org.apache.commons", name: "com.springsource.org.apache.commons.logging", version: commonsLoggingVersion, configuration: "compile", ext: "jar"
		testCompile group: "org.apache.commons", name: "com.springsource.org.apache.commons.io", version: commonsIoVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.slf4j.api", version: slf4jVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "javax.servlet", version: javaxServletVersion, configuration: "compile", ext: "jar"

		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi", version: equinoxVersion, configuration: "compile", ext: "jar"
		compile group: "org.eclipse.virgo.mirrored", name: "org.eclipse.osgi.services", version: osgiServicesVersion, configuration: "compile", ext: "jar"
		runtime group: "org.eclipse.osgi", name: "org.eclipse.equinox.http", version: equinoxHttp, configuration: "runtime", ext: "jar"

		compile group: "org.eclipse.gemini", name: "org.eclipse.gemini.management", version: geminiManagementVersion, configuration: "compile", ext: 'jar'

		compile group: "org.apache.commons", name: "com.springsource.org.apache.commons.fileupload", version: commonsFileuploadVersion, configuration: "compile", ext: "jar"
		compile group: "org.jolokia", name: "org.jolokia.osgi", version: jolokiaVersion, configuration: "compile", ext: "jar"
	}
}
